// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quan_ly_tai_nguyen_rung.DATA;

#nullable disable

namespace quan_ly_tai_nguyen_rung.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241210031026_new3")]
    partial class new3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.AccessHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAY");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time")
                        .HasColumnName("TIME");

                    b.Property<int>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("TYPE");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("ID_USER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ACCESS_HISTORY");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.Commune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("ID_DISTRICT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("COMMUNE");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("DISTRICT");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<int>("RolesGroupId")
                        .HasColumnType("int")
                        .HasColumnName("ID_ROLES_GROUP");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("RolesGroupId");

                    b.ToTable("GROUPS");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.ImpactHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAY");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time")
                        .HasColumnName("TIME");

                    b.Property<int>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("TYPE");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("ID_USER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IMPACT_HISTORY");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("ROLES");

                    b.HasKey("Id");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.RolesGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Role")
                        .HasColumnType("bit")
                        .HasColumnName("ROLES");

                    b.HasKey("Id");

                    b.ToTable("ROLES_GROUP");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommuneId")
                        .HasColumnType("int")
                        .HasColumnName("ID_COMMUNE");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DISPLAY_NAME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PHONE");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ID_ROLES");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USER_NAME");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.HasIndex("RoleId");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGroup");

                    b.HasIndex("IdUser");

                    b.ToTable("USER_GROUP");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section2.PlantFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Acreage")
                        .HasColumnType("real")
                        .HasColumnName("ACREAGE");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<int>("CommuneId")
                        .HasColumnType("int")
                        .HasColumnName("ID_COMMUNE");

                    b.Property<string>("ContactFace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_FACE");

                    b.Property<string>("ContactMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_MAIL");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_PHONE");

                    b.Property<byte[]>("ImagePlantBreedingFacility")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("IMAGE_LANT_BREEDING_FACILITY");

                    b.Property<int>("Labor")
                        .HasColumnType("int")
                        .HasColumnName("LABOR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<float>("SeedlingsYield")
                        .HasColumnType("real")
                        .HasColumnName("SEEDLINGS_YIELD");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.ToTable("PLANT_FACILITY");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section2.PlantType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("HEIGHT")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PRICE")
                        .HasColumnType("int");

                    b.Property<int>("PlantFacilityId")
                        .HasColumnType("int");

                    b.Property<int>("TYPE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PlantFacilityId");

                    b.ToTable("PLANT_TYPE");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section3.WoodProcessingFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Acreage")
                        .HasColumnType("real")
                        .HasColumnName("ACREAGE");

                    b.Property<int>("ActivityForm")
                        .HasMaxLength(300)
                        .HasColumnType("int")
                        .HasColumnName("ACTIVITY_FORM");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("ContactFace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_FACE");

                    b.Property<string>("ContactMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_MAIL");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_PHONE");

                    b.Property<int>("IdCommune")
                        .HasColumnType("int")
                        .HasColumnName("ID_COMMUNE");

                    b.Property<byte[]>("ImageWoodProcessingFacility")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("IMAGE_WOOD_PROCESSING_FACILITY");

                    b.Property<int>("Labor")
                        .HasColumnType("int")
                        .HasColumnName("LABOR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<int>("Product")
                        .HasMaxLength(300)
                        .HasColumnType("int")
                        .HasColumnName("PRODUCT");

                    b.Property<int>("ProductionType")
                        .HasMaxLength(300)
                        .HasColumnType("int")
                        .HasColumnName("PRODUCTION_TYPE");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.Property<string>("WoodSpeciesProvided")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("WOOD_SPECIES_PROVIDED");

                    b.Property<float?>("Yield")
                        .HasColumnType("real")
                        .HasColumnName("Yield");

                    b.HasKey("Id");

                    b.HasIndex("IdCommune");

                    b.ToTable("WOOD_PROCESSING_FACILITY");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section4.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalFacilityId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentQuantity")
                        .HasColumnType("int")
                        .HasColumnName("CURRENT_QUANTITY");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<DateTime>("DateFound")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_FOUND");

                    b.Property<bool>("Fluctuation")
                        .HasColumnType("bit")
                        .HasColumnName("FLUCTUATION");

                    b.Property<int>("Generic")
                        .HasColumnType("int")
                        .HasColumnName("GENERIC");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LOCATION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<int>("PreviousQuantity")
                        .HasColumnType("int")
                        .HasColumnName("PREVIOUS_QUANTITY");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("REASON");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<bool>("is_Active")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.HasKey("Id");

                    b.HasIndex("AnimalFacilityId");

                    b.ToTable("ANIMAL");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section4.AnimalAnimalFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalFacilityId")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANIMAL_FACILITY");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANIMAL");

                    b.HasKey("Id");

                    b.HasIndex("AnimalFacilityId");

                    b.HasIndex("AnimalId");

                    b.ToTable("ANIMAL_ANIMAL_FACILITY");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section4.AnimalFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Acreage")
                        .HasColumnType("float")
                        .HasColumnName("ACREAGE");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<int>("CommuneId")
                        .HasColumnType("int")
                        .HasColumnName("ID_COMMUNE");

                    b.Property<string>("ContactFace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_FACE");

                    b.Property<string>("ContactMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_MAIL");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONTACT_PHONE");

                    b.Property<byte[]>("ImageAnimalStorage")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("IMAGE_ANIMAL_STORAGE");

                    b.Property<int>("Labor")
                        .HasColumnType("int")
                        .HasColumnName("LABOR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.ToTable("ANIMAL_FACILITY");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.AccessHistory", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.Commune", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.District", "District")
                        .WithMany("Communes")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.Group", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.RolesGroup", "RolesGroup")
                        .WithMany()
                        .HasForeignKey("RolesGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolesGroup");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.ImpactHistory", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.User", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.UserGroup", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.Group", "Group")
                        .WithMany()
                        .HasForeignKey("IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section2.PlantFacility", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section2.PlantType", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section2.PlantFacility", "PlantFacility")
                        .WithMany()
                        .HasForeignKey("PlantFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlantFacility");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section3.WoodProcessingFacility", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("IdCommune")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section4.Animal", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section4.AnimalFacility", null)
                        .WithMany("Animals")
                        .HasForeignKey("AnimalFacilityId");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section4.AnimalAnimalFacility", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section4.AnimalFacility", "AnimalFacility")
                        .WithMany()
                        .HasForeignKey("AnimalFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section4.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("AnimalFacility");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section4.AnimalFacility", b =>
                {
                    b.HasOne("quan_ly_tai_nguyen_rung.Models.section1.Commune", "Commune")
                        .WithMany()
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section1.District", b =>
                {
                    b.Navigation("Communes");
                });

            modelBuilder.Entity("quan_ly_tai_nguyen_rung.Models.section4.AnimalFacility", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
